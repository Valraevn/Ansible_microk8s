---
- name: Ensure uptime of k8s nodes and service exposable on port 3030
  hosts: k8s
  become: yes

  tasks:
  
  - name: Check if MicroK8s is running
    command: microk8s status --wait-ready
    register: microk8s_status
    changed_when: False
    failed_when: microk8s_status is failed

  - name: Ensure MicroK8s is running if previously stopped
    command: microk8s start
    when: microk8s_status is failed

  - name: Check if kubectl is working and nodes are ready
    command: microk8s kubectl get nodes
    register: kubectl_get_nodes
    changed_when: False
    failed_when: kubectl_get_nodes.stdout.find('Ready') == -1

  - name: Apply deployment with a service on port 30200
    copy:
      dest: /tmp/service.yml
      content: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: sample-deployment
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: uptime-kuma
          template:
            metadata:
              labels:
                app: uptime-kuma
            spec:
              containers:
              - name: uptime-kuma-container
                image: louislam/uptime-kuma:1
                ports:
                - containerPort: 80
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: my-app-service
        spec:
          type: NodePort
          selector:
            app: my-app
          ports:
          - protocol: TCP
            port: 80
            targetPort: 80
            nodePort: 30200
          
  - name: Apply K8s deployment and expose service
    become: True
    command: microk8s kubectl apply -f /tmp/service.yml

  - name: Ensure the service is accessible from LAN on port 30200
    uri:
      url: http://{{ ansible_host }}:30200
      status_code: 200
      timeout: 10
    register: service_access_test
    retries: 10
    delay: 6
    until: service_access_test.status == 200
